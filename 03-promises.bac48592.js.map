{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA6BE,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAa,C,SACjBL,E,MACAC,GAGF,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLP,EACFK,EAAQF,GAERG,EAAOH,EAAW,GAEnBJ,EAAM,G,CAzCFS,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOH,EAAMI,cAAchB,MAAMiB,OAC7C,MAAMC,EAAOH,OAAOH,EAAMI,cAAcE,KAAKD,OACvCE,EAASJ,OAAOH,EAAMI,cAAcG,OAAOF,OAEjD,GAAIL,EAAMI,cAAchB,MAAMiB,MAAQ,GAAKL,EAAMI,cAAcG,OAAOF,OAAS,EAC7E,OAAOG,EAAAxB,GAASyB,OAAOC,QAAQ,qGAGjC,IAAK,IAAIC,EAAW,EAAGA,GAAYJ,EAAQI,GAAY,EACrDzB,EAAcyB,EAAUT,GACrBU,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxB,GAASyB,OAAOI,QAAQ,qBAAqB1B,QAAeC,MAAU,IAEvE0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAxB,GAASyB,OAAOM,QAAQ,oBAAoB5B,QAAeC,MAAU,IAEzEc,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(event.currentTarget.delay.value);\n  const step = Number(event.currentTarget.step.value);\n  const amount = Number(event.currentTarget.amount.value);\n\n  if (event.currentTarget.delay.value < 0 || event.currentTarget.amount.value <= 0) {\n    return Notiflix.Notify.warning(\"Delay step and amount values must be positive numbers and the amount value must be more than zero\");\n} \n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n}\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    const PromiseObj = {\n      position,\n      delay,\n    };\n\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(PromiseObj);\n      } else {\n          reject(PromiseObj);\n      }\n      }, delay)\n    });\n  }"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","PromiseObj","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","value","step","amount","$parcel$interopDefault","Notify","warning","position1","then","success","catch","failure"],"version":3,"file":"03-promises.bac48592.js.map"}